# Container for building casper-node debian packages
# Based on buildenv and needs much cleanup
FROM debian:buster

RUN apt update
RUN apt-get install -y apt-transport-https \
                    ca-certificates curl gnupg \
                    lsb-release software-properties-common \
                    rpm equivs gcc
RUN apt update

# RUN APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv \
#                --keyserver hkp://keyserver.ubuntu.com \
#                --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
#
# RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
# RUN add-apt-repository \
#	"deb [arch=amd64] https://download.docker.com/linux/ubuntu \
#	$(lsb_release -cs) \
#	stable"
#
# RUN apt-get update

# install docker-compose
# RUN curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
# RUN chmod +x /usr/local/bin/docker-compose

RUN apt update
RUN apt install curl dirmngr apt-transport-https lsb-release ca-certificates
RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -

RUN curl -f -L https://static.rust-lang.org/rustup.sh -O
RUN sh rustup.sh -y
ENV PATH="$PATH:/root/.cargo/bin"

RUN echo export RUST_TOOLCHAIN=$(curl -s https://raw.githubusercontent.com/CasperLabs/CasperLabs/dev/execution-engine/rust-toolchain) >> ~/.rust_env

RUN . ~/.rust_env; rustup toolchain install "${RUST_TOOLCHAIN}"
RUN . ~/.rust_env; rustup toolchain install stable
RUN rustup update
RUN . ~/.rust_env; cargo +${RUST_TOOLCHAIN} install cargo-rpm
RUN . ~/.rust_env; cargo +${RUST_TOOLCHAIN} install cargo-deb

# utilities for debugging
# build dependencies
# integration tests
# packaging
RUN apt-get -y install \
              curl moreutils netcat-openbsd nmap openssh-server psmisc screen socat tmux wget \
              protobuf-compiler libprotobuf-dev git \
              fakeroot lintian nodejs rsync locales libssl-dev pkg-config jq


RUN apt-get clean

# install cmake
RUN curl -Ls https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3-Linux-x86_64.tar.gz | tar -C /usr/local --strip-components=1 -xz

# add link checker plugins to npm
RUN npm install --global remark-cli remark-validate-links remark-lint-no-dead-urls "assemblyscript@0.9.1"

# add yarn to npm
# RUN npm install --global yarn
# install lerna by yarn
# RUN yarn global add lerna

# RUN sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen && locale-gen

RUN git clone https://github.com/CasperLabs/casper-node.git ~/casper-node
RUN cd ~/casper-node && make setup
RUN cd ~/casper-node && ~/.cargo/bin/cargo fetch
RUN rm -rf ~/casper-node

ENV LC_ALL en_US.UTF-8
WORKDIR /root/
